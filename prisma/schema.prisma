

generator client {
  provider = "prisma-client-js"
}




datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  bookings  Booking[]
  ticket   Ticket[]
}

model Event {
  id          String       @id @default(uuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  venueId     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  venue   Venue    @relation(fields: [venueId], references: [id])
  bookings Booking[]
  ticket    Ticket[]
}

model Venue {
  id          String       @id @default(uuid())
  name        String
  address     String
  capacity    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  events Event[]
}

model Ticket {
  id          String       @id @default(uuid())
  eventId     String
  userId      String?
  price       Float
  type        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  event Event @relation(fields: [eventId], references: [id])
  user  User? @relation(fields: [userId], references: [id])
  bookink  Booking[]
}

model Booking {
  id          String       @id @default(uuid())
  userId      String
  eventId     String
  ticketId    String?
  quantity    Int
  totalPrice  Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user   User    @relation(fields: [userId], references: [id])
  event  Event   @relation(fields: [eventId], references: [id])
  ticket Ticket? @relation(fields: [ticketId], references: [id])
}
